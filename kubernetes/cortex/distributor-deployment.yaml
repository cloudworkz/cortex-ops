apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: cortex
    component: distributor
  name: cortex-distributor
  namespace: monitoring
spec:
  replicas: 6
  selector:
    matchLabels:
      app: cortex
      component: distributor
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "80"
        prometheus.io/scrape: "true"
      labels:
        app: cortex
        component: distributor
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cortex
                    - key: component
                      operator: In
                      values:
                        - distributor
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cortex
                    - key: component
                      operator: In
                      values:
                        - distributor
                topologyKey: kubernetes.io/hostname
              weight: 20
      containers:
        - args:
            - -target=distributor
            - -server.http-listen-port=80
            - -consul.hostname=consul-server.hashicorp.svc.cluster.local:8500

            # HA tracker options
            - -distributor.ha-tracker.enable=true
            - -distributor.ha-tracker.enable-for-all-users=true
            - -distributor.ha-tracker.consul.hostname=consul-server.hashicorp.svc.cluster.local:8500
            - -distributor.ha-tracker.prefix=ha/
            - -distributor.ha-tracker.store=consul
            - -distributor.ha-tracker.cluster=__cluster__
            - -distributor.ha-tracker.replica=__replica__

            - -distributor.health-check-ingesters=true
            - -distributor.ingestion-burst-size=200000
            - -distributor.ingestion-rate-limit=100000
            - -distributor.remote-timeout=20s
            - -distributor.replication-factor=3
            - -distributor.shard-by-all-labels=true
            - -ring.heartbeat-timeout=5m
            - -ingester.client.grpc-use-gzip-compression=true
            - -validation.reject-old-samples=true
            - -validation.reject-old-samples.max-age=12h
            - -limits.per-user-override-config=/etc/cortex/validation/config.yaml
            - -mem-ballast-size-bytes=1000000000 # 1 Gb
          env:
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: JAEGER_SAMPLER_TYPE
              value: ratelimiting
            - name: JAEGER_SAMPLER_PARAM
              value: "7"
          image: quay.io/cortexproject/cortex:v0.3.0
          imagePullPolicy: IfNotPresent
          name: distributor
          ports:
            - containerPort: 80
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 8Gi # Usually the distributor only consume like 2GB of RAM, but when set to 4GB I experienced OOM kills
            requests:
              cpu: "4"
              memory: 8Gi
          volumeMounts:
            - mountPath: /etc/cortex/validation
              name: tenant-limit-config
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: tenant-limit-config
          name: tenant-limit-config
